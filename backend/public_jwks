import json
import boto3
import base64

PUBLIC_KEY_ARN ='arn:aws:kms:ap-southeast-1:123379395205:key/ca48ac22-eea2-450b-8cbb-ff8f54dfcfcd'

kms = boto3.client('kms')   #create an instance of KMS client using boto3

def extract_public_key_material(public_key):
    # Decode the base64-encoded modulus and exponent
    modulus = base64.b64decode(public_key[:256])
    exponent = base64.b64decode(public_key[256:])

    # Convert the modulus and exponent to integers
    n = int.from_bytes(modulus, byteorder='big')
    e = int.from_bytes(exponent, byteorder='big')

    return n, e


def get_public_key():
    response = kms.get_public_key(
        KeyId=PUBLIC_KEY_ARN,
       # Encoding='RAW'
    )
    return response['PublicKey']


def create_jwk(public_key):
    n, e = extract_public_key_material(public_key)      # base64-encoded RSA public key
    n_b64 = base64.urlsafe_b64encode(n.to_bytes((n.bit_length() + 7) // 8, byteorder='big')).decode('utf-8').rstrip('=')
    e_b64 = base64.urlsafe_b64encode(e.to_bytes((e.bit_length() + 7) // 8, byteorder='big')).decode('utf-8').rstrip('=')
    n_bytes = base64.urlsafe_b64decode(n_b64 + '==')                #decode strings before convert to int
    e_bytes = base64.urlsafe_b64decode(e_b64 + '==')
    n_int = int.from_bytes(n_bytes, byteorder='big')            #convert to integer than add to jwks 
    e_int = int.from_bytes(e_bytes, byteorder='big')
    jwk = {
        'kty': 'RSA',
        'alg': 'RS256',
        'use': 'sig',
        'n': n_int,
        'e': e_int
    }
    return jwk


    
def create_jwks(jwk):
    jwks = {
        'keys': [jwk]
    }
    return jwks
    
def create_jwks_response(jwks):
    response = {
        'statusCode': 200,
        'headers': {
            'Content-Type': 'application/json'
        },
        'body': json.dumps(jwks)
    }
    return response

def lambda_handler(event, context):
    public_key = get_public_key()
    jwk = create_jwk(public_key)
    jwks = create_jwks(jwk)
    #response = create_jwks_response(jwks)
    #return response
    #This was to test reponse code
    
    #this is to return jwks 
    keys = jwks['keys']  # extract the 'keys' field
    return keys
